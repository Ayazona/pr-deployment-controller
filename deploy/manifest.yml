---
apiVersion: v1
kind: Namespace
metadata:
  name: pr-deployment-controller
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pr-deployment-controller
  namespace: pr-deployment-controller
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pr-deployment-controller
subjects:
  - kind: ServiceAccount
    name: pr-deployment-controller
    namespace: pr-deployment-controller
roleRef:
  kind: ClusterRole
  name: pr-deployment-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Secret
metadata:
  name: pr-deployment-controller
  namespace: pr-deployment-controller
data:
  cert.pem: <docker-client-cert>
  key.pem: <docker-client-key>
  ca.pem: <docker-server-ca>
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: pr-deployment-controller
  namespace: pr-deployment-controller
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: pr-deployment-controller
        version: v1
    spec:
      serviceAccountName: pr-deployment-controller
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      terminationGracePeriodSeconds: 900
      containers:
        - image: <image>
          imagePullPolicy: Always
          name: pr-deployment-controller
          args:
            - run
            - --namespace=$(POD_NAMESPACE)
            - --dockerHost=<docker-host>
            - --dockerCertFile=/var/lib/pr-deployment-controller/cert.pem
            - --dockerKeyFile=/var/lib/pr-deployment-controller/key.pem
            - --dockerCAFile=/var/lib/pr-deployment-controller/ca.pem
            - --dockerRegistry=<docker-registry>
            - --dockerRegistryUsername=<docker-registry-username>
            - --dockerRegistryPassword=<docker-registry-password>
            - --githubWebhookSecret=<github-webhook-secret>
            - --githubAccessToken=<github-access-token>
            - --clusterDomain=<wildcard-domain>
            - --buildClusterRole=<cluster-role-used-by-builds>
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              memory: 600Mi
          readinessProbe:
            httpGet:
              path: /health
              port: http-webhooks
            initialDelaySeconds: 10
            periodSeconds: 5
          ports:
            - containerPort: 9000
              name: http-webhooks
            - containerPort: 9090
              name: http-metrics
          volumeMounts:
            - name: pr-deployment-controller
              mountPath: "/var/lib/pr-deployment-controller"
              readOnly: true
      volumes:
        - name: pr-deployment-controller
          secret:
            secretName: pr-deployment-controller
            items:
              - key: cert.pem
                path: cert.pem
              - key: key.pem
                path: key.pem
              - key: ca.pem
                path: ca.pem
---
apiVersion: v1
kind: Service
metadata:
  name: pr-deployment-controller
  namespace: pr-deployment-controller
  labels:
    app: pr-deployment-controller
spec:
  ports:
    - name: http-webhooks
      port: 9000
      targetPort: 9000
  selector:
    app: pr-deployment-controller
